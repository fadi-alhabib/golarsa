name: CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v ./...

      - name: Test CLI functionality
        run: |
          go build -o golarsa .
          mkdir test-project
          cd test-project
          go mod init test-project.com/example
          ../golarsa service user
          [ -d "pkg/services/users" ] || exit 1
          [ -f "pkg/services/users/users.go" ] || exit 1
          [ -f "pkg/services/users/repo/users.repo.go" ] || exit 1
          [ -f "pkg/services/users/models/users.models.go" ] || exit 1
          [ -f "pkg/services/users/handler/users.handler.go" ] || exit 1
          [ -f "pkg/services/users/di/users.di.go" ] || exit 1
          echo "âœ“ CLI functionality test passed"

  build-matrix:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release'
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          BINARY_NAME=golarsa-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=${BINARY_NAME}.exe
          fi
          go build -ldflags "-X main.version=${VERSION}" -o ${BINARY_NAME} .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./golarsa-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          asset_name: golarsa-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream
